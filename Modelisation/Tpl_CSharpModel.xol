<?xml version="1.0" encoding="UTF-8"?>
<?PowerDesigner AppLocale="UTF16" Code="C# 2.0 - Model" Family=".NET" HasExtendedMetaClass="FALSE" ID="{48DE8DAA-F163-416B-ACAA-3F3ABD6F9EE9}" LastModificationDate="1437756132" Name="C# 2.0 - Model" Objects="71" SubFamily="C#" Symbols="0" Type="{1811206C-1A4B-11D1-83D9-444553540000}" signature="XOL_XML" version="16.5.0.3982"?>
<!-- do not edit this file -->

<DVTL xmlns:a="attribute" xmlns:c="collection" xmlns:o="object">

<o:ObjectLanguage Id="o1">
<a:ObjectID>48DE8DAA-F163-416B-ACAA-3F3ABD6F9EE9</a:ObjectID>
<a:Name>C# 2.0 - Model</a:Name>
<a:Code>C# 2.0 - Model</a:Code>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1435855724</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:Comment>This object language definition is based on the C# 2.0 language specification.
It has built-in support for Web Services under the .NET framework</a:Comment>
<a:Family>.NET</a:Family>
<a:SubFamily>C#</a:SubFamily>
<a:CheckGlobalScript>&#39;******************************************************************************
&#39;* Purpose:  This VB-Script holds global definitions shared by all the custom-
&#39;*            checks scripts of the model extension.
&#39;******************************************************************************

Option Explicit &#39; This is to ensure all used variables are defined

Dim sGlobalMsg

Private dictKeyword

&#39; generic check against reserved keywords
Private Function CheckKeyword(code)
   If IsEmpty(dictKeyword) Then InitializeKeywordDictionary
   dim lcode
   lcode = lcase(code)
   CheckKeyword = Not dictKeyword.Exists(lcode)
End Function

Function IsMainMethod(oper)
   IsMainMethod = False
   
   &#39; Condition to be a Main method: Static Main
   If StrComp(oper.Code, &quot;Main&quot;, vbTextCompare)=0 And oper.Static = True Then
      IsMainMethod = True
      sGlobalMsg = sGlobalMsg + &quot;   &quot; + oper.Parent.FullyQualifiedName + vbNewLine
   End If
End Function

Function CountMainMethod(obj)
   Dim nCounter
   nCounter = 0
   
   &#39; Count in current folder
   Dim clss, oper
   For Each clss In obj.Classes
      If Not clss.IsShortcut() Then
         For Each oper In clss.Operations
             If IsMainMethod(oper) Then
                nCounter = nCounter + 1
             End If
         Next
      End If
   Next
   
   &#39; Recursive into subfolders
   Dim folder
   For Each folder In obj.Packages   
      If Not folder.IsShortcut() Then
         nCounter = nCounter + CountMainMethod(folder)
      End If
   Next
   
   &#39; Return
   CountMainMethod = nCounter
End Function

&#39; initialization of the common keyword dictionary
Private Sub InitializeKeywordDictionary
   Set dictKeyword = CreateObject(&quot;Scripting.Dictionary&quot;)
   
   dictKeyword.add &quot;abstract&quot;, &quot;abstract&quot;
   dictKeyword.add &quot;add&quot;, &quot;add&quot;
   dictKeyword.add &quot;as&quot;, &quot;as&quot;
   dictKeyword.add &quot;base&quot;, &quot;base&quot;
   dictKeyword.add &quot;bool&quot;, &quot;bool&quot;
   dictKeyword.add &quot;break&quot;, &quot;break&quot;
   dictKeyword.add &quot;byte&quot;, &quot;byte&quot;
   dictKeyword.add &quot;case&quot;, &quot;case&quot;
   dictKeyword.add &quot;catch&quot;, &quot;catch&quot;
   dictKeyword.add &quot;char&quot;, &quot;char&quot;
   dictKeyword.add &quot;checked&quot;, &quot;checked&quot;
   dictKeyword.add &quot;class&quot;, &quot;class&quot;
   dictKeyword.add &quot;const&quot;, &quot;const&quot;
   dictKeyword.add &quot;continue&quot;, &quot;continue&quot;
   dictKeyword.add &quot;decimal&quot;, &quot;decimal&quot;
   dictKeyword.add &quot;default&quot;, &quot;default&quot;
   dictKeyword.add &quot;delegate&quot;, &quot;delegate&quot;
   dictKeyword.add &quot;do&quot;, &quot;do&quot;
   dictKeyword.add &quot;double&quot;, &quot;double&quot;
   dictKeyword.add &quot;else&quot;, &quot;else&quot;
   dictKeyword.add &quot;enum&quot;, &quot;enum&quot;
   dictKeyword.add &quot;event&quot;, &quot;event&quot;
   dictKeyword.add &quot;explicit&quot;, &quot;explicit&quot;
   dictKeyword.add &quot;extern&quot;, &quot;extern&quot;
   dictKeyword.add &quot;false&quot;, &quot;false&quot;
   dictKeyword.add &quot;finally&quot;, &quot;finally&quot;
   dictKeyword.add &quot;fixed&quot;, &quot;fixed&quot;
   dictKeyword.add &quot;float&quot;, &quot;float&quot;
   dictKeyword.add &quot;for&quot;, &quot;for&quot;
   dictKeyword.add &quot;foreach&quot;, &quot;foreach&quot;
   dictKeyword.add &quot;get&quot;, &quot;get&quot;
   dictKeyword.add &quot;goto&quot;, &quot;goto&quot;
   dictKeyword.add &quot;if&quot;, &quot;if&quot;
   dictKeyword.add &quot;implicit&quot;, &quot;implicit&quot;
   dictKeyword.add &quot;in&quot;, &quot;in&quot;
   dictKeyword.add &quot;int&quot;, &quot;int&quot;
   dictKeyword.add &quot;interface&quot;, &quot;interface&quot;
   dictKeyword.add &quot;internal&quot;, &quot;internal&quot;
   dictKeyword.add &quot;is&quot;, &quot;is&quot;
   dictKeyword.add &quot;lock&quot;, &quot;lock&quot;
   dictKeyword.add &quot;long&quot;, &quot;long&quot;
   dictKeyword.add &quot;namespace&quot;, &quot;namespace&quot;
   dictKeyword.add &quot;new&quot;, &quot;new&quot;
   dictKeyword.add &quot;null&quot;, &quot;null&quot;
   dictKeyword.add &quot;object&quot;, &quot;object&quot;
   dictKeyword.add &quot;operator&quot;, &quot;operator&quot;
   dictKeyword.add &quot;out&quot;, &quot;out&quot;
   dictKeyword.add &quot;override&quot;, &quot;override&quot;
   dictKeyword.add &quot;params&quot;, &quot;params&quot;
   dictKeyword.add &quot;partial&quot;, &quot;partial&quot;
   dictKeyword.add &quot;private&quot;, &quot;private&quot;
   dictKeyword.add &quot;protected&quot;, &quot;protected&quot;
   dictKeyword.add &quot;public&quot;, &quot;public&quot;
   dictKeyword.add &quot;readonly&quot;, &quot;readonly&quot;
   dictKeyword.add &quot;ref&quot;, &quot;ref&quot;
   dictKeyword.add &quot;remove&quot;, &quot;remove&quot;
   dictKeyword.add &quot;return&quot;, &quot;return&quot;
   dictKeyword.add &quot;sbyte&quot;, &quot;sbyte&quot;
   dictKeyword.add &quot;sealed&quot;, &quot;sealed&quot;
   dictKeyword.add &quot;set&quot;, &quot;set&quot;
   dictKeyword.add &quot;short&quot;, &quot;short&quot;
   dictKeyword.add &quot;sizeof&quot;, &quot;sizeof&quot;
   dictKeyword.add &quot;stackalloc&quot;, &quot;stackalloc&quot;
   dictKeyword.add &quot;static&quot;, &quot;static&quot;
   dictKeyword.add &quot;string&quot;, &quot;string&quot;
   dictKeyword.add &quot;struct&quot;, &quot;struct&quot;
   dictKeyword.add &quot;switch&quot;, &quot;switch&quot;
   dictKeyword.add &quot;this&quot;, &quot;this&quot;
   dictKeyword.add &quot;throw&quot;, &quot;throw&quot;
   dictKeyword.add &quot;true&quot;, &quot;true&quot;
   dictKeyword.add &quot;try&quot;, &quot;try&quot;
   dictKeyword.add &quot;typeof&quot;, &quot;typeof&quot;
   dictKeyword.add &quot;uint&quot;, &quot;uint&quot;
   dictKeyword.add &quot;ulong&quot;, &quot;ulong&quot;
   dictKeyword.add &quot;unchecked&quot;, &quot;unchecked&quot;
   dictKeyword.add &quot;unsafe&quot;, &quot;unsafe&quot;
   dictKeyword.add &quot;ushort&quot;, &quot;ushort&quot;
   dictKeyword.add &quot;using&quot;, &quot;using&quot;
   dictKeyword.add &quot;virtual&quot;, &quot;virtual&quot;
   dictKeyword.add &quot;void&quot;, &quot;void&quot;
   dictKeyword.add &quot;volatile&quot;, &quot;volatile&quot;
   dictKeyword.add &quot;where&quot;, &quot;where&quot;
   dictKeyword.add &quot;while&quot;, &quot;while&quot;
End Sub
</a:CheckGlobalScript>
<c:Categories>
<o:TargetCategory Id="o2">
<a:ObjectID>3A447608-2160-4CB5-95BC-15A7F5FF3557</a:ObjectID>
<a:Name>Settings</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<c:Categories>
<o:TargetCategory Id="o3">
<a:ObjectID>05063820-90E4-425E-BB22-1E713F51B37A</a:ObjectID>
<a:Name>Constants</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1437754770</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<c:Categories>
<o:StringTargetItem Id="o4">
<a:ObjectID>DF4A62B9-1614-4E7C-95C3-6FE2A476E3E6</a:ObjectID>
<a:Name>Void</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:Comment>Void Constant</a:Comment>
<a:StringTargetItem.Value>void</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:StringTargetItem Id="o5">
<a:ObjectID>A0EAB80A-31BF-4AEF-BA2B-F195EE822E6B</a:ObjectID>
<a:Name>Bool</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:Comment>Boolean Constant</a:Comment>
<a:StringTargetItem.Value>bool</a:StringTargetItem.Value>
</o:StringTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o6">
<a:ObjectID>8870484B-44F8-407C-AA85-F0E81422DB56</a:ObjectID>
<a:Name>DataTypes</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<c:Categories>
<o:MapTargetItem Id="o7">
<a:ObjectID>0230F798-9E0A-4E4F-823C-BE84F4D65AC7</a:ObjectID>
<a:Name>BasicDataTypes</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1436250591</a:ModificationDate>
<a:Modifier>tauguey</a:Modifier>
<a:Comment>C# Data Types</a:Comment>
<a:MapTargetItem.Value>char=A1
bool=BL
short=SI
int=I
long=LI
float=F
double=LF
byte=BT
sbyte=BT
ushort=SI
uint=I
ulong=LI
decimal=DC
string=VA254
object=ANY
*=TXT</a:MapTargetItem.Value>
<a:List>char
bool
short
int
long
float
double
byte
sbyte
ushort
uint
ulong
decimal
string
object
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o8">
<a:ObjectID>4294E96F-2284-423E-891A-37195654749D</a:ObjectID>
<a:Name>AdditionalDataTypes</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1436250591</a:ModificationDate>
<a:Modifier>tauguey</a:Modifier>
<a:MapTargetItem.Value>Array=ANY
Boolean=BL
Byte=BT
Char=TXT
DateTime=DT
TimeSpan=T
Decimal=DC
Double=LF
Int16=SI
Int32=I
Int64=LI
Object=ANY
SByte=BT
Single=F
String=VA254
UInt16=SI
UInt32=I
UInt64=LI
System.Array=ANY
System.Boolean=BL
System.Byte=BT
System.Char=TXT
System.DateTime=DT
System.TimeSpan=T
System.Decimal=DC
System.Double=LF
System.Int16=SI
System.Int32=I
System.Int64=LI
System.Object=ANY
System.SByte=BT
System.Single=F
System.String=VA254
System.UInt16=SI
System.UInt32=I
System.UInt64=LI</a:MapTargetItem.Value>
<a:List>Array
Boolean
Byte
Char
DateTime
TimeSpan
Decimal
Double
Int16
Int32
Int64
Object
SByte
Single
String
UInt16
UInt32
UInt64
System.Array
System.Boolean
System.Byte
System.Char
System.DateTime
System.TimeSpan
System.Decimal
System.Double
System.Int16
System.Int32
System.Int64
System.Object
System.SByte
System.Single
System.String
System.UInt16
System.UInt32
System.UInt64
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o9">
<a:ObjectID>9124FA6B-74A1-4389-8B33-57D35F1C7443</a:ObjectID>
<a:Name>ConceptualDataTypes</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1436250591</a:ModificationDate>
<a:Modifier>tauguey</a:Modifier>
<a:Comment>Conceptual Data Types</a:Comment>
<a:MapTargetItem.Value>A%n=string
VA%n=string
LA=string
LA%n=string
LVA=string
LVA%n=string
BT=byte
BT%n=byte
SI=short
I=int
LI=long
N=decimal
N%n=decimal
N%s,%p=decimal
DC=decimal
DC%n=decimal
DC%s,%p=decimal
SF=float
F=float
F%n=float
LF=double
MN=decimal
MN%n=decimal
MN%s,%p=decimal
BL=bool
D=DateTime
T=DateTime
DT=DateTime
TS=DateTime
NO=Serial
NO%n=Serial
BIN%n=string
LBIN=string
LBIN%n=string
TXT=string
TXT%n=string
MBT=char
MBT%n=string
VMBT=string
VMBT%n=string
PIC=string
PIC%n=string
BMP=string
BMP%n=string
OLE=string
OLE%n=string
ANY=object
*=string</a:MapTargetItem.Value>
<a:List>A%n
VA%n
LA
LA%n
LVA
LVA%n
BT
BT%n
SI
I
LI
N
N%n
N%s,%p
DC
DC%n
DC%s,%p
SF
F
F%n
LF
MN
MN%n
MN%s,%p
BL
D
T
DT
TS
NO
NO%n
BIN%n
LBIN
LBIN%n
TXT
TXT%n
MBT
MBT%n
VMBT
VMBT%n
PIC
PIC%n
BMP
BMP%n
OLE
OLE%n
ANY
</a:List>
</o:MapTargetItem>
<o:StringTargetItem Id="o10">
<a:ObjectID>684369A8-7A98-4D67-9E00-9A4B11DA9CD2</a:ObjectID>
<a:Name>Modifiers</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:StringTargetItem.Value>const ref out params delegate</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:MapTargetItem Id="o11">
<a:ObjectID>9C4D2068-6082-4C98-8A82-B4AC82DB13DD</a:ObjectID>
<a:Name>Local2SoapDataTypes</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1435842698</a:ModificationDate>
<a:Modifier>tauguey</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:MapTargetItem.Value>string=soap:string
bool=soap:boolean
byte=soap:byte
short=soap:short
int=soap:int
long=soap:long
float=soap:float
double=soap:double
sbyte=soap:byte
ushort=soap:unsignedShort
uint=soap:unsignedInt
ulong=soap:unsignedLong
decimal=soap:decimal
object=soap:string</a:MapTargetItem.Value>
<a:List>string
bool
byte
short
int
long
float
double
sbyte
ushort
uint
ulong
decimal
object
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o12">
<a:ObjectID>CEB381BD-6501-424E-AEDC-58B6C1592366</a:ObjectID>
<a:Name>Local2XSDDataTypes</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:MapTargetItem.Value>string=xsd:string
bool=xsd:boolean
byte=xsd:byte
short=xsd:short
int=xsd:int
long=xsd:long
float=xsd:float
double=xsd:double
sbyte=xsd:byte
ushort=xsd:unsignedShort
uint=xsd:unsignedInt
ulong=xsd:unsignedLong
decimal=xsd:decimal
object=xsd:string</a:MapTargetItem.Value>
<a:List>string
bool
byte
short
int
long
float
double
sbyte
ushort
uint
ulong
decimal
object
</a:List>
</o:MapTargetItem>
<o:StringTargetItem Id="o13">
<a:ObjectID>2825D461-D0C9-40CE-90DE-CAE35A7B110A</a:ObjectID>
<a:Name>DefaultDataType</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:StringTargetItem.Value>int</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:MapTargetItem Id="o14">
<a:ObjectID>2ACC3063-6006-4651-A2BC-0B827DD3D536</a:ObjectID>
<a:Name>WSDL2LocalDataTypes</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1436250591</a:ModificationDate>
<a:Modifier>tauguey</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:MapTargetItem.Value>xsd:string=string
xsd:boolean=bool
xsd:decimal=double
xsd:float=float
xsd:double=double
xsd:integer=int
xsd:nonPositiveInteger=int
xsd:negativeInteger=int
xsd:long=long
xsd:int=int
xsd:short=short
xsd:byte=byte
xsd:nonNegativeInteger=uint
xsd:positiveInteger=uint
xsd:unsignedLong=ulong
xsd:unsignedInt=uint
xsd:unsignedShort=ushort
xsd:unsignedByte=byte
xsd:duration=string
xsd:dateTime=string
xsd:time=string
xsd:date=string
xsd:gYearMonth=string
xsd:gYear=string
xsd:gMonthDay=string
xsd:gDay=string
xsd:gMonth=string
xsd:hexBinary=string
xsd:base64Binary=string
xsd:anyURI=string
xsd:QName=string
xsd:NOTATION=string
xsd:normalizedString=string
xsd:token=string
xsd:language=string
xsd:Name=string
xsd:NCName=string
xsd:NMTOKEN=string
xsd:NMTOKENS=string
xsd:ID=string
xsd:IDREF=string
xsd:IDREFS=string
xsd:ENTITY=string
xsd:ENTITIES=string
soap:Array=system.Collections.ArrayList
string=string
boolean=bool
decimal=double
float=float
double=double
integer=int
nonPositiveInteger=int
negativeInteger=int
long=long
int=int
short=short
byte=byte
nonNegativeInteger=uint
positiveInteger=uint
unsignedLong=ulong
unsignedInt=uint
unsignedShort=ushort
unsignedByte=byte
duration=string
dateTime=string
time=string
date=string
gYearMonth=string
gYear=string
gMonthDay=string
gDay=string
gMonth=string
hexBinary=string
base64Binary=string
anyURI=string
QName=string
NOTATION=string
normalizedString=string
token=string
language=string
Name=string
NCName=string
NMTOKEN=string
NMTOKENS=string
ID=string
IDREF=string
IDREFS=string
ENTITY=string
ENTITIES=string</a:MapTargetItem.Value>
<a:List>xsd:string
xsd:boolean
xsd:decimal
xsd:float
xsd:double
xsd:integer
xsd:nonPositiveInteger
xsd:negativeInteger
xsd:long
xsd:int
xsd:short
xsd:byte
xsd:nonNegativeInteger
xsd:positiveInteger
xsd:unsignedLong
xsd:unsignedInt
xsd:unsignedShort
xsd:unsignedByte
xsd:duration
xsd:dateTime
xsd:time
xsd:date
xsd:gYearMonth
xsd:gYear
xsd:gMonthDay
xsd:gDay
xsd:gMonth
xsd:hexBinary
xsd:base64Binary
xsd:anyURI
xsd:QName
xsd:NOTATION
xsd:normalizedString
xsd:token
xsd:language
xsd:Name
xsd:NCName
xsd:NMTOKEN
xsd:NMTOKENS
xsd:ID
xsd:IDREF
xsd:IDREFS
xsd:ENTITY
xsd:ENTITIES
soap:Array
string
boolean
decimal
float
double
integer
nonPositiveInteger
negativeInteger
long
int
short
byte
nonNegativeInteger
positiveInteger
unsignedLong
unsignedInt
unsignedShort
unsignedByte
duration
dateTime
time
date
gYearMonth
gYear
gMonthDay
gDay
gMonth
hexBinary
base64Binary
anyURI
QName
NOTATION
normalizedString
token
language
Name
NCName
NMTOKEN
NMTOKENS
ID
IDREF
IDREFS
ENTITY
ENTITIES
</a:List>
</o:MapTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o15">
<a:ObjectID>CA69E769-48A7-4FAB-A75C-AD00900D4EA4</a:ObjectID>
<a:Name>Events</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:MapTargetItem Id="o16">
<a:ObjectID>3C1A9B8C-15E5-401D-B162-E5D898A32096</a:ObjectID>
<a:Name>StandardEvents</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:MapTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o17">
<a:ObjectID>802D9DF2-04F5-4543-AC8F-3B165ADCE9A4</a:ObjectID>
<a:Name>Namings</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:MapTargetItem Id="o18">
<a:ObjectID>F57ECB15-97B7-4038-B6CD-3A5B804B3DEC</a:ObjectID>
<a:Name>GetterName</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:MapTargetItem.Value>bool=get_%Code%
*=get_%Code%</a:MapTargetItem.Value>
<a:List>bool
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o19">
<a:ObjectID>4574D4DC-AF76-41E8-BB0F-818D01512284</a:ObjectID>
<a:Name>SetterName</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:MapTargetItem.Value>*=set_%Code%</a:MapTargetItem.Value>
</o:MapTargetItem>
<o:StringTargetItem Id="o20">
<a:ObjectID>6798447B-0CFB-489B-B42D-73922D124E84</a:ObjectID>
<a:Name>IllegalChar</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:StringTargetItem.Value>&quot; &#39;&quot;&quot;().\#&quot;</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:StringTargetItem Id="o21">
<a:ObjectID>2F1724F4-E0C2-4C69-B422-BC27196F1B96</a:ObjectID>
<a:Name>ASPFileName</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:StringTargetItem.Value>%Code%ASP</a:StringTargetItem.Value>
</o:StringTargetItem>
</c:Categories>
</o:TargetCategory>
<o:BooleanTargetItem Id="o22">
<a:ObjectID>DD4EC142-9CC1-45B6-9CB9-1AC24D74734D</a:ObjectID>
<a:Name>EnableGenerics</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:ProfileTargetItem Id="o23">
<a:ObjectID>AA565B46-C948-472E-9668-70BC8FEFB058</a:ObjectID>
<a:Name>Profile</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1437508785</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:MetaClassTargetItem Id="o24">
<a:ObjectID>8AB32083-8D83-4308-83AD-B2CFC79EE237</a:ObjectID>
<a:Name>Class</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1437576570</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:EnableSelectionGeneration>1</a:EnableSelectionGeneration>
<a:CodeConvention>FirstUpperChar</a:CodeConvention>
<c:Categories>
<o:TypedCategoryTargetItem Id="o25">
<a:TypePublicName>TemplateTargetItem</a:TypePublicName>
<a:ObjectID>20B21FFE-B6B5-4DCB-9DDC-9DD12E8F56F9</a:ObjectID>
<a:Name>Templates</a:Name>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1437753625</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TemplateTargetItem Id="o26">
<a:ObjectID>92D5D05F-1D57-41FA-B6A8-46C2A01C339C</a:ObjectID>
<a:Name>validation_definition</a:Name>
<a:TemplateTargetItem.Value>namespace %ActiveModel.namespace%.Entity
{
    /// &lt;summary&gt;
    /// Implémente la validation des propriétés
    /// &lt;/summary&gt;
    public partial class %.T:Code% : IDataErrorInfo
    {
        // Validation globale de l&#39;entité
        public string Error
        {
            get
            {
                string all_mess = &quot;&quot;;
                string msg;
.foreach_item(Attributes,\n)
                all_mess += ((msg = this\[&quot;%.T:Code%&quot;\]) != String.Empty) ? (GetPropertyDesc(&quot;%.T:Code%&quot;) + &quot; :\\n\\t&quot; + msg + &quot;\\n&quot;) : String.Empty;
.next(\n)
\n                return all_mess;
            }
        }

        // Validation par propriété
        public string this\[string propertyName\]
        {
            get
            {
                string msg = String.Empty;
                switch (propertyName)
                {
.foreach_item(Attributes,\n)
                    case &quot;%Code%&quot;:
.if(%Mandatory%==true)
\n                          if(this.%.T:Code% == null){
                              msg = &quot;NOT_NULL_RESTRICTION&quot;;
                              break;
                            }
.else
\n                          if(this.%.T:Code% == null)
                              break;
.endif
.if(%.T:Format% == &quot;&quot;)
\n                           // Pas de test
.else
\n                           MVVM.Formats.%.T:Format%.Validate(this.%.T:Code%.ToString(),ref msg);
.endif
\n                        break;
.next(\n)
\n                }
                
                if (msg != String.Empty)
                    return GetPropertyDesc(propertyName) + &quot;:\\n&quot; + msg;
                return String.Empty;
            }
        }

        public static string GetClassDesc()
        {
            return &quot;%.T:Comment%&quot;;
        }
        
        public static string GetPropertyDesc(string propertyName)
        {
            switch (propertyName)
            {
.foreach_item(Attributes,\n)

                    case &quot;%.T:Code%&quot;:
                        return &quot;%.T:Comment%&quot;;
.next(\n)
\n            }
            return &quot;&quot;;
        }
    }
}
</a:TemplateTargetItem.Value>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1437753625</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
<o:TemplateTargetItem Id="o27">
<a:ObjectID>C8265CD2-2A05-4F97-AE99-6235A1A9CA25</a:ObjectID>
<a:Name>validation_header</a:Name>
<a:TemplateTargetItem.Value>/*
   Validation des champs de l&#39;entité %Code%

   !!Attention!!
   Ce code source est généré automatiquement, toutes modifications seront perdues
   
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.ComponentModel;
using System.Globalization;
using System.Reflection;
using Lib;
using %ActiveModel.namespace%.Format;
%serial_type%

</a:TemplateTargetItem.Value>
<a:CreationDate>1402499040</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437754646</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
<o:TemplateTargetItem Id="o28">
<a:ObjectID>DD13BC3F-C419-4BB5-90A2-EE24DDA7112E</a:ObjectID>
<a:Name>entity_definition</a:Name>
<a:TemplateTargetItem.Value>namespace %ActiveModel.namespace%.Entity
{
    /// &lt;summary&gt;
    /// Implémente la validation des propriétés
    /// &lt;/summary&gt;
    public partial class %.T:Code% : Lib.Entity
    {
         public override string GetEntityName(){ return &quot;%.T:Code%&quot;; }

         public static string\[\] PrimaryIdentifier = {
.foreach_item(Attributes)
.if(%PrimaryIdentifier%==true)
&quot;%Code%&quot;
.endif()
.next(&quot;, &quot;)
};
         public override string\[\] GetPrimaryIdentifier() { return PrimaryIdentifier; }
         
         \#region Fields
.foreach_item(Attributes,\n)
         // %Comment%\n
         .if(%Mandatory%==true) or (%DataType%==&quot;string&quot;)
         protected %DataType% %.L:Code%;
         public %DataType% %.FU:Code% { get{ return %.L:Code%; } set{ %.L:Code% = value; OnPropertyChanged(&quot;%.FU:Code%&quot;); } }
         .else
         protected %DataType%? %.L:Code%;
         public %DataType%? %.FU:Code% { get{ return %.L:Code%; } set{ %.L:Code% = value; OnPropertyChanged(&quot;%.FU:Code%&quot;); } }
         .endif
.next(\n)
\n         \#endregion // Fields

         \#region Associations
.set_value(thisCode,%.T:Code%)
.foreach_item(Associations,\n)
         // %Comment%\n
         .if(%thisCode%==%ClassA.Code%) and (%RoleBMultiple%==false)
         .set_value(assName,%RoleAName%)
         protected %ClassB.Code% %.L:assName%;
         public virtual %ClassB.Code% %.FU:assName% { get{ return %.L:assName%; } set{ %.L:assName% = value; OnPropertyChanged(&quot;%.FU:assName%&quot;); } }
         .elsif(%thisCode%==%ClassA.Code%) and (%RoleBMultiple%==true)
         .set_value(assName,%RoleAName%)
         protected Collection&lt;%ClassB.Code%&gt; %.L:assName%;
         public virtual Collection&lt;%ClassB.Code%&gt; %.FU:assName% { get{ return %.L:assName%; } set{ %.L:assName% = value; OnPropertyChanged(&quot;%.FU:assName%&quot;); } }
         .elsif(%thisCode%==%ClassB.Code%) and (%RoleAMultiple%==false)
         .set_value(assName,%RoleBName%)
         protected %ClassA.Code% %.L:assName%;
         public virtual %ClassA.Code% %.FU:assName% { get{ return %.L:assName%; } set{ %.L:assName% = value; OnPropertyChanged(&quot;%.FU:assName%&quot;); } }
         .elsif(%thisCode%==%ClassB.Code%) and (%RoleAMultiple%==true)
         .set_value(assName,%RoleBName%)
         protected Collection&lt;%ClassA.Code%&gt; %.L:assName%;
         public virtual Collection&lt;%ClassA.Code%&gt; %.FU:assName% { get{ return %.L:assName%; } set{ %.L:assName% = value; OnPropertyChanged(&quot;%.FU:assName%&quot;); } }
         .endif
.next(\n)
\n         \#endregion // Associations

         \#region Methods
         public override string ToString()
         {
             string result = this.GetType().Name+&quot;:&quot;+Environment.NewLine+&quot;-----------------------------&quot;+Environment.NewLine;
.foreach_item(Attributes,\n)
             result += &quot;%.T:Code% = &quot; + %.T:Code% + Environment.NewLine;
.next(\n)
\n             return result;
         }
.if(%PrimaryIdentifier%!=null)
         // Identifiants
         public override bool CompareIdentifier(IEntity e)
         {
             %Code% b = e as %Code%;
             if(b==null)
               return false;
             return (
.foreach_item(Attributes)
.if(%PrimaryIdentifier%==true)
this.%.FU:Code% == b.%.FU:Code%
.endif()
.next(&quot; &amp;&amp; &quot;)
);
         }
.endif
\n         \#endregion // Methods
\n    }
}</a:TemplateTargetItem.Value>
<a:CreationDate>1435848790</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437753625</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
<o:TemplateTargetItem Id="o29">
<a:ObjectID>42CCE307-1E2D-4380-9F81-C9150F1327BD</a:ObjectID>
<a:Name>entity_header</a:Name>
<a:TemplateTargetItem.Value>/*
   Définition de base pour l&#39;entité %Code%

   !!Attention!!
   Ce code source est généré automatiquement, toutes modifications seront perdues
   
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.ComponentModel;
using System.Globalization;
using System.Reflection;
using System.Collections.ObjectModel;
using Lib;
%serial_type%</a:TemplateTargetItem.Value>
<a:CreationDate>1435848790</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437754557</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
<o:TemplateTargetItem Id="o30">
<a:ObjectID>A47E41B7-EEB8-495A-832A-4E6688952935</a:ObjectID>
<a:Name>database_definition</a:Name>
<a:TemplateTargetItem.Value>.set_object(PrimarySerial,null)
.foreach_item(PrimaryIdentifier.Attributes)
.if(%DataType%==&quot;Serial&quot;)
.set_object(PrimarySerial,this)
.endif
.next(&quot;, &quot;)
namespace %ActiveModel.namespace%.Entity
{
    //public partial class %.T:Code% 
    public class %.T:Code%Set : %.T:Code%, IEntitySet
    {
        public void Refresh()
        {
            //Proprietes
            Load();
            //Associations
            RazPropertyCache();
        }

#region AutoLoadAssociations
        int cached = 0;
        public void RazPropertyCache()
        {
            cached = 0;
.set_value(thisCode,%.T:Code%)
.foreach_item(Associations,\n)
.if(%thisCode%==%ClassA.Code%)
.set_value(assName,%RoleAName%)
.elsif(%thisCode%==%ClassB.Code%)
.set_value(assName,%RoleBName%)
.endif
            OnPropertyChanged(&quot;%.FU:assName%&quot;);
.next(\n)
\n        }
        
.set_value(thisCode,%.T:Code%)
.set_value(assCount,0)
.foreach_item(Associations,\n)
         // %Comment%\n
         .if(%thisCode%==%ClassA.Code%) and (%RoleBMultiple%==false)
         .set_value(assName,%RoleAName%)
         .set_value(readOnly,false)
         public override %ClassB.Code% %.FU:assName% {
         .elsif(%thisCode%==%ClassA.Code%) and (%RoleBMultiple%==true)
         .set_value(assName,%RoleAName%)
         .set_value(readOnly,true)
         public override Collection&lt;%ClassB.Code%&gt; %.FU:assName% {
         .elsif(%thisCode%==%ClassB.Code%) and (%RoleAMultiple%==false)
         .set_value(assName,%RoleBName%)
         .set_value(readOnly,false)
         public override %ClassA.Code% %.FU:assName% {
         .elsif(%thisCode%==%ClassB.Code%) and (%RoleAMultiple%==true)
         .set_value(assName,%RoleBName%)
         .set_value(readOnly,true)
         public override Collection&lt;%ClassA.Code%&gt; %.FU:assName% {
         .endif(\n)
         .if(%readOnly%==true)
            get{ return ((Factory as SqlFactory).useCachedAssociation == true &amp;&amp; IsCached%.FU:assName% == true) ? %.L:assName% : Load%.FU:assName%(); }
         .else
            get{ return IsCached%.FU:assName% ? %.L:assName% : Load%.FU:assName%(); }
            set{ IsCached%.FU:assName% = true; %.L:assName% = value; OnPropertyChanged(&quot;%.FU:assName%&quot;); }
         .endif(\n)
         }
         public bool IsCached%.FU:assName% { get { return ((cached &gt;&gt; %assCount%) &amp; 0x1) != 0; } set { if (value) cached |= (0x1 &lt;&lt; %assCount%); else cached &amp;= ~(0x1 &lt;&lt; %assCount%); } }
         .set_value(assCount,%+(assCount,1)%)
.next(\n)
\n#endregion

        public void Load()
        {
            SqlFactory db = Factory as SqlFactory;
            string query = &quot;SELECT 
.foreach_item(Attributes)
.if(%PrimaryIdentifier%==false)
%.T:Code%
.endif
.next(&quot;, &quot;)
 FROM %.T:Code% WHERE 
.foreach_item(Attributes)
.if(%PrimaryIdentifier%==true)
%.T:Code% = &quot;+SqlFactory.ParseType(%.T:Code%)+&quot;
.endif
.next(&quot; and &quot;)
&quot;;
            db.QueryObject(query, this);
        }
        
        public object LoadAssociation(string name)
        {
            SqlFactory db = Factory as SqlFactory;
.set_value(thisCode,%.T:Code%)
.foreach_item(Associations,\n)
   .if(%thisCode%==%ClassA.Code%)
      .set_value(assName,%.FUT:RoleAName%)
   .elsif(%thisCode%==%ClassB.Code%)
      .set_value(assName,%.FUT:RoleBName%)
   .endif
            if(name == &quot;%assName%&quot;)
               return Load%assName%();
.next(\n)
\n
            return null;
        }

        public int Delete()
        {
            SqlFactory db = Factory as SqlFactory;
            string query = &quot;DELETE FROM %.T:Code% WHERE 
.foreach_item(PrimaryIdentifier.Attributes)
%.T:Code% = &quot;+SqlFactory.ParseType(%.T:Code%)+&quot;
.next(&quot; and &quot;)
&quot;;
            return db.Query(query);
        }

        public void Insert()
        {\n
            SqlFactory db = Factory as SqlFactory;
            string add_params = &quot;&quot;,add_values = &quot;&quot;;
            string query = &quot;INSERT INTO %.T:Code% (
.foreach_item(Attributes)
.if(%DataType%!=&quot;Serial&quot;)
%.T:Code%
.endif
.next(&quot;, &quot;)
 $add_params$)
.if(%PrimarySerial%!=null)
 OUTPUT INSERTED.%PrimarySerial.Code%
.endif(&quot; &quot;)
 VALUES( 
.foreach_item(Attributes)
.if(%PrimaryIdentifier%==false)
&quot; + SqlFactory.ParseType(%.T:Code%) + &quot;
.endif
.next(&quot;, &quot;)
 $add_values$)&quot;;

.set_value(thisCode,%.T:Code%)
.foreach_item(Associations,\n)
   .set_object(assClass,null)
   .set_value(classCode,null)
   .if(%thisCode%==%ClassA.Code%) and (%RoleBMultiple%==false)
      .set_value(assName,%.FUT:RoleAName%)
      .set_value(classCode,%ClassB.Code%)
   .elsif(%thisCode%==%ClassB.Code%) and (%RoleAMultiple%==false)
      .set_value(assName,%.FUT:RoleBName%)
      .set_value(classCode,%ClassA.Code%)
   .endif
   .if(%classCode%!=null)
      .foreach_item(Model.Classes)
            .if(%Code%==%classCode%)
            .set_object(assClass,this)
            .endif
      .next
   .endif
   .if(%assClass%!=null)
            // Association %assClass.Code%\n
            if(%assName% != null){
               add_params += &quot;, 
.foreach_item(Model.Classes)
.if(%Code%==%classCode%)
.foreach_item(PrimaryIdentifier.Attributes)
%Code%
.next(&quot;, &quot;)
.endif
.next
&quot;;
               add_values += &quot;, 
.foreach_item(Model.Classes)
.if(%Code%==%classCode%)
.foreach_item(PrimaryIdentifier.Attributes)
&quot;+SqlFactory.ParseType(%assName%.%Code%)+&quot;
.next(&quot;, &quot;)
.endif
.next
&quot;;
            }
.endif
.next(\n)
\n
            query = query.Replace(&quot;$add_params$&quot;, add_params);
            query = query.Replace(&quot;$add_values$&quot;, add_values);
\n
.if(%PrimarySerial%!=null)
            string result = db.QueryScalar(query).ToString();
            %PrimarySerial.Code% = %PrimarySerial.DataType%.Parse(result);
.else
            db.Query(query);\n
.endif
\n        }


        public int Update()
        {\n
            SqlFactory db = Factory as SqlFactory;
            string add_params = &quot;&quot;;
            string query = &quot;UPDATE %.T:Code% SET 
.foreach_item(Attributes)
.if(%PrimaryIdentifier%==false)
%.T:Code% = &quot;+SqlFactory.ParseType(%.T:Code%)+&quot;
.endif
.next(&quot;, &quot;)
 $add_params$ WHERE 
.foreach_item(Attributes)
.if(%PrimaryIdentifier%==true)
%.T:Code% = &quot;+SqlFactory.ParseType(%.T:Code%)+&quot;
.endif
.next(&quot; and &quot;)
 &quot;;

.set_value(thisCode,%.T:Code%)
.foreach_item(Associations,\n)
   .set_object(assName,null)
   .set_object(assClass,null)
   .set_value(classCode,null)
   .if(%thisCode%==%ClassA.Code%) and (%RoleBMultiple%==false)
      .set_value(assName,%.FUT:RoleAName%)
      .set_value(classCode,%ClassB.Code%)
   .elsif(%thisCode%==%ClassB.Code%) and (%RoleAMultiple%==false)
      .set_value(assName,%.FUT:RoleBName%)
      .set_value(classCode,%ClassA.Code%)
   .endif
   .if(%classCode%!=null)
      .foreach_item(Model.Classes)
            .if(%Code%==%classCode%)
            .set_object(assClass,this)
            .endif
      .next
   .endif
   .if(%assClass%!=null) and (%assName%!=null)
            // Association %assClass.Code%\n
            .set_value(classCode,%assClass.Code%)
            if(%assName% != null){
               add_params += &quot;, 
.foreach_item(Model.Classes)
.if(%Code%==%classCode%)
.foreach_item(PrimaryIdentifier.Attributes)
%.T:Code% = &quot;+SqlFactory.ParseType(%assName%.%.T:Code%)+&quot;
.next(&quot;, &quot;)
.endif
.next
&quot;;
            }
   .endif
.next(\n)
\n
            query = query.Replace(&quot;$add_params$&quot;, add_params);
            
            return db.Query(query);
\n        }
\n

.set_object(thisClass,this)
.set_value(thisCode,%.T:Code%)
.foreach_item(Associations)
   .set_object(assClass,null)
   .set_value(classCode,null)
   .if(%thisCode%==%ClassA.Code%) and (%RoleBMultiple%==false)
      .set_value(assName,%.FUT:RoleAName%)
      .set_value(classCode,%ClassB.Code%)
   .elsif(%thisCode%==%ClassB.Code%) and (%RoleAMultiple%==false)
      .set_value(assName,%.FUT:RoleBName%)
      .set_value(classCode,%ClassA.Code%)
   .endif
   .if(%classCode%!=null)
      .foreach_item(Model.Classes)
            .if(%Code%==%classCode%)
            .set_object(assClass,this)
            .endif
      .next
   .endif
   .if(%assClass%!=null)
\n        // %ClassA.Code%(%RoleAMinMultiplicity%,%RoleAMaxMultiplicity%) &lt;-&gt; (%RoleBMinMultiplicity%,%RoleBMaxMultiplicity%)%ClassB.Code%
        public %assClass.Code% Load%assName%()
        {
            SqlFactory db = Factory as SqlFactory;
            string query = &quot;SELECT 
.foreach_item(assClass.PrimaryIdentifier.Attributes)
%Code%
.next(&quot;, &quot;)
 FROM %thisCode% WHERE 
.foreach_item(thisClass.Attributes)
.if(%PrimaryIdentifier%==true)
%.T:Code% = &quot;+SqlFactory.ParseType(%.T:Code%)+&quot;
.endif
.next(&quot;and&quot;)
&quot;;
.foreach_item(assClass.PrimaryIdentifier.Attributes,\n)
            %DataType% %Code% = new %DataType%();
.next(\n)

            bool ok = true;
            %.UF:assName%Set %.L:assName% = null;
             
            db.Query(query, reader =&gt;
            {
                if (reader.Read())
                {\n
                  .foreach_item(assClass.PrimaryIdentifier.Attributes)
                   if (reader\[&quot;%.T:Code%&quot;\] != null)\n
                  .if(%DataType%==&quot;string&quot;)
                     %.T:Code% = reader\[&quot;%.T:Code%&quot;\].ToString();
                  .else
                     %.T:Code% = %DataType%.Parse(reader\[&quot;%.T:Code%&quot;\].ToString());
                  .endif(\n)
                  else
                     ok = false;
                  .next(\n)
\n                }
                return 0;
            });

            if (ok == false)
                return null;

            // obtient l&#39;objet de reference
            %.L:assName% = (from p in db.References.OfType&lt;%assClass.Code%Set&gt;() where 
.foreach_item(assClass.PrimaryIdentifier.Attributes)
p.%Code% == %Code%
.next(&quot;&amp;&amp; &quot;)
 select p).FirstOrDefault();
            if ( %.L:assName% == null)
            {
                %.L:assName% = new %assClass.Name%Set();
                %.L:assName%.Factory = db;
.foreach_item(assClass.PrimaryIdentifier.Attributes,\n)
                %.L:assName%.%Code% = %Code%;
.next(\n)
\n                %.L:assName% = db.GetReference(%.L:assName%) as %assClass.Code%Set;//mise en cache
            }

            // Recharge les données depuis la BDD
            %.L:assName%.Refresh();

            return %.UF:assName% = %.L:assName%;
        }
   .endif(\n)
.next


.set_object(thisClass,this)
.set_value(thisCode,%.T:Code%)
.foreach_item(Associations)
   .set_object(assClass,null)
   .set_value(classCode,null)
   .if(%thisCode%==%ClassA.Code%) and (%RoleBMultiple%==true)
      .set_value(assName,%.FUT:RoleAName%)
      .set_value(classCode,%ClassB.Code%)
   .elsif(%thisCode%==%ClassB.Code%) and (%RoleAMultiple%==true)
      .set_value(assName,%.FUT:RoleBName%)
      .set_value(classCode,%ClassA.Code%)
   .endif
   .if(%RoleAMultiple%==true) and (%RoleBMultiple%==true)
   .set_value(assTable,%.FUT:Code%)
   .else
   .set_value(assTable,%classCode%)
   .endif
   .if(%classCode%!=null)
      .foreach_item(Model.Classes)
            .if(%Code%==%classCode%)
            .set_object(assClass,this)
            .endif
      .next
   .endif
   
   .if(%assClass%!=null)
\n        // %ClassA.Code%(%RoleAMinMultiplicity%,%RoleAMaxMultiplicity%) &lt;-&gt; (%RoleBMinMultiplicity%,%RoleBMaxMultiplicity%)%ClassB.Code%
        public Collection&lt;%assClass.Code%&gt; Load%assName%()
        {
            SqlFactory db = Factory as SqlFactory;
            string query = &quot;SELECT 
.foreach_item(assClass.PrimaryIdentifier.Attributes)
%Code%
.next(&quot;, &quot;)
 FROM %assTable% WHERE 
.foreach_item(thisClass.Attributes)
.if(%PrimaryIdentifier%==true)
%.T:Code% = &quot;+SqlFactory.ParseType(%.T:Code%)+&quot;
.endif
.next(&quot;and&quot;)
&quot;;
            Collection&lt;%assClass.Code%&gt; %.L:assName% = new Collection&lt;%assClass.Code%&gt;();

            db.Query(query, reader =&gt;
            {
                while (reader.Read())
                {
                  // obtient l&#39;identifiant
                  .foreach_item(assClass.PrimaryIdentifier.Attributes,\n)
                  %DataType% %.T:Code% = new %DataType%();
                  .next(\n)
 \n
                  .foreach_item(assClass.PrimaryIdentifier.Attributes,\n)
                  if (reader\[&quot;%.T:Code%&quot;\] == null)
                     continue;\n
                  .if(%DataType%==&quot;string&quot;)
                  %.T:Code% = reader\[&quot;%.T:Code%&quot;\].ToString();
                  .else
                  %.T:Code% = %DataType%.Parse(reader\[&quot;%.T:Code%&quot;\].ToString());
                  .endif(\n)
                  .next(\n)
                  
                  // obtient l&#39;objet de reference
                  %assClass.Code%Set _entity = (from p in db.References.OfType&lt;%assClass.Code%Set&gt;() where 
.foreach_item(assClass.PrimaryIdentifier.Attributes)
p.%Code% == %Code%
.next(&quot;&amp;&amp; &quot;)
 select p).FirstOrDefault();

                  if ( _entity == null)
                  {
                      _entity = new %assClass.Code%Set();
                      _entity.Factory = db;
.foreach_item(assClass.PrimaryIdentifier.Attributes,\n)
                      _entity.%Code% = %Code%;
.next(\n)
\n                      _entity = db.GetReference(_entity) as %assClass.Code%Set;//mise en cache
                  }
                  
                  // Recharge les données depuis la BDD
                  _entity.Refresh();
            
                  // Ajoute la reference à la collection
                  %.L:assName%.Add(_entity);
\n                }
                return 0;
            });

            return %.FU:assName% = %.L:assName%;
        }
   .endif(\n)
.next

        public void PickIdentity(object _reader)
        {
            SqlFactory db = Factory as SqlFactory;
            SqlDataReader reader = _reader as SqlDataReader;\n
            .foreach_item(PrimaryIdentifier.Attributes)
             if (reader\[&quot;%.T:Code%&quot;\] != null)\n
            .if(%DataType%==&quot;string&quot;)
               %.T:Code% = reader\[&quot;%.T:Code%&quot;\].ToString();
            .else
               %.T:Code% = %DataType%.Parse(reader\[&quot;%.T:Code%&quot;\].ToString());
            .endif(\n)
            .next(\n)
\n        }
       
        public void PickProperties(object _reader)
        {
            SqlFactory db = Factory as SqlFactory;
            SqlDataReader reader = _reader as SqlDataReader;\n
            .foreach_item(Attributes)
            .if(%PrimaryIdentifier%==false)
             if (reader\[&quot;%.T:Code%&quot;\] != null)\n
            .if(%DataType%==&quot;string&quot;)
               %.T:Code% = reader\[&quot;%.T:Code%&quot;\].ToString();
            .else
               %.T:Code% = %DataType%.Parse(reader\[&quot;%.T:Code%&quot;\].ToString());
            .endif(\n)
            .endif(\n)
            .next(\n)
\n        }
       
        //public static %.T:Code%Set Factory = new %.T:Code%Set();
    }
}
</a:TemplateTargetItem.Value>
<a:CreationDate>1435903934</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437755259</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
<o:TemplateTargetItem Id="o31">
<a:ObjectID>4BD5DE37-6199-4870-8442-CF45E55A3C3F</a:ObjectID>
<a:Name>database_header</a:Name>
<a:TemplateTargetItem.Value>/*
   Définition SQL de l&#39;entité %Code%

   !!Attention!!
   Ce code source est généré automatiquement, toutes modifications seront perdues
   
*/

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using Lib;
%serial_type%
</a:TemplateTargetItem.Value>
<a:CreationDate>1435903934</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437754605</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
<o:TemplateTargetItem Id="o32">
<a:ObjectID>A2D6A059-0F06-44BB-A2EC-3E4A53F22C21</a:ObjectID>
<a:Name>serial_type</a:Name>
<a:TemplateTargetItem.Value>using Serial = System.Int32;</a:TemplateTargetItem.Value>
<a:CreationDate>1436258399</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1436258438</a:ModificationDate>
<a:Modifier>tauguey</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
<o:TemplateTargetItem Id="o33">
<a:ObjectID>24F43502-5F9B-4AB6-B06A-F49059E63972</a:ObjectID>
<a:Name>xml_definition</a:Name>
<a:TemplateTargetItem.Value>.set_object(PrimarySerial,null)
.foreach_item(PrimaryIdentifier.Attributes)
.if(%DataType%==&quot;Serial&quot;)
.set_object(PrimarySerial,this)
.endif
.next(&quot;, &quot;)
namespace %ActiveModel.namespace%.Entity
{
    //public partial class %.T:Code% 
    public class %.T:Code%XmlSet : %.T:Code%, IEntitySet
    {
        public void Refresh()
        {
            //Proprietes
            Load();
            //Associations
            RazPropertyCache();
        }

#region AutoLoadAssociations
        int cached = 0;
        public void RazPropertyCache()
        {
            cached = 0;
.set_value(thisCode,%.T:Code%)
.foreach_item(Associations,\n)
.if(%thisCode%==%ClassA.Code%)
.set_value(assName,%RoleAName%)
.elsif(%thisCode%==%ClassB.Code%)
.set_value(assName,%RoleBName%)
.endif
            OnPropertyChanged(&quot;%.FU:assName%&quot;);
.next(\n)
\n        }
        
.set_value(thisCode,%.T:Code%)
.set_value(assCount,0)
.foreach_item(Associations,\n)
         // %Comment%\n
         .if(%thisCode%==%ClassA.Code%) and (%RoleBMultiple%==false)
         .set_value(assName,%RoleAName%)
         .set_value(readOnly,false)
         public override %ClassB.Code% %.FU:assName% {
         .elsif(%thisCode%==%ClassA.Code%) and (%RoleBMultiple%==true)
         .set_value(assName,%RoleAName%)
         .set_value(readOnly,true)
         public override Collection&lt;%ClassB.Code%&gt; %.FU:assName% {
         .elsif(%thisCode%==%ClassB.Code%) and (%RoleAMultiple%==false)
         .set_value(assName,%RoleBName%)
         .set_value(readOnly,false)
         public override %ClassA.Code% %.FU:assName% {
         .elsif(%thisCode%==%ClassB.Code%) and (%RoleAMultiple%==true)
         .set_value(assName,%RoleBName%)
         .set_value(readOnly,true)
         public override Collection&lt;%ClassA.Code%&gt; %.FU:assName% {
         .endif(\n)
         .if(%readOnly%==true)
            get{ return ((Factory as XmlFactory).useCachedAssociation == true &amp;&amp; IsCached%.FU:assName% == true) ? %.L:assName% : Load%.FU:assName%(); }
         .else
            get{ return IsCached%.FU:assName% ? %.L:assName% : Load%.FU:assName%(); }
            set{ IsCached%.FU:assName% = true; %.L:assName% = value; OnPropertyChanged(&quot;%.FU:assName%&quot;); }
         .endif(\n)
         }
         public bool IsCached%.FU:assName% { get { return ((cached &gt;&gt; %assCount%) &amp; 0x1) != 0; } set { if (value) cached |= (0x1 &lt;&lt; %assCount%); else cached &amp;= ~(0x1 &lt;&lt; %assCount%); } }
         .set_value(assCount,%+(assCount,1)%)
.next(\n)
\n#endregion

        public void Load()
        {
            XmlFactory db = Factory as XmlFactory;
            XmlElement e = db.FindElement(&quot;%thisCode%&quot;, new string\[\] { 
.foreach_item(PrimaryIdentifier.Attributes)
&quot;%.T:Code%&quot;
.next(&quot;, &quot;)
 }, new object\[\] { 
.foreach_item(PrimaryIdentifier.Attributes)
%.T:Code%
.next(&quot;, &quot;)
 });
            if (e != null)
            {
                this.PickProperties(e.ChildNodes);
            }
        }
        
        public object LoadAssociation(string name)
        {
            XmlFactory db = Factory as XmlFactory;
.set_value(thisCode,%.T:Code%)
.foreach_item(Associations,\n)
   .if(%thisCode%==%ClassA.Code%)
      .set_value(assName,%.FUT:RoleAName%)
   .elsif(%thisCode%==%ClassB.Code%)
      .set_value(assName,%.FUT:RoleBName%)
   .endif
            if(name == &quot;%assName%&quot;)
               return Load%assName%();
.next(\n)
\n
            return null;
        }

        public int Delete()
        {
            XmlFactory db = Factory as XmlFactory;
            XmlElement e = db.FindElement(&quot;%thisCode%&quot;, new string\[\] { 
.foreach_item(PrimaryIdentifier.Attributes)
&quot;%.T:Code%&quot;
.next(&quot;, &quot;)
 }, new object\[\] { 
.foreach_item(PrimaryIdentifier.Attributes)
%.T:Code%
.next(&quot;, &quot;)
 });
            if (e != null)
            {
                db.GetDocument().RemoveChild(e);
                return 1;
            }
            return 0;
        }

        public void Insert()
        {
            XmlFactory db = Factory as XmlFactory;\n
.if(%PrimarySerial%!=null)
            %PrimarySerial.Code% = db.NextSequence(&quot;%thisCode%&quot;, &quot;%PrimarySerial.Code%&quot;);
.endif(\n)
            XmlElement root = db.GetDocument().CreateElement(&quot;%thisCode%&quot;);
\n
.foreach_item(Attributes)
            // %.T:Code%
            db.SetFirstChild(root,&quot;%.T:Code%&quot;,%.T:Code%.ToString());
.next(\n)
\n
.set_value(thisCode,%.T:Code%)
.foreach_item(Associations,\n)
   .set_object(assClass,null)
   .set_value(classCode,null)
   .if(%thisCode%==%ClassA.Code%) and (%RoleBMultiple%==false)
      .set_value(assName,%.FUT:RoleAName%)
      .set_value(classCode,%ClassB.Code%)
   .elsif(%thisCode%==%ClassB.Code%) and (%RoleAMultiple%==false)
      .set_value(assName,%.FUT:RoleBName%)
      .set_value(classCode,%ClassA.Code%)
   .endif
   .if(%classCode%!=null)
      .foreach_item(Model.Classes)
            .if(%Code%==%classCode%)
            .set_object(assClass,this)
            .endif
      .next
   .endif
   .if(%assClass%!=null)
            // Association %assClass.Code%
            if (%assName% != null)
            {\n
      .foreach_item(Model.Classes)
      .if(%Code%==%classCode%)
      .foreach_item(PrimaryIdentifier.Attributes)
                db.SetFirstChild(root,&quot;%.T:Code%&quot;,%assName%.%.T:Code%.ToString());\n
      .next(\n)
      .endif
      .next
            }
.endif
.next(\n)
\n
            // Ajoute au document
            db.GetDocument().DocumentElement.AppendChild(root);
\n        }


        public int Update()
        {
            XmlFactory db = Factory as XmlFactory;
            XmlElement e = db.FindElement(&quot;%thisCode%&quot;, new string\[\] { 
.foreach_item(PrimaryIdentifier.Attributes)
&quot;%.T:Code%&quot;
.next(&quot;, &quot;)
 }, new object\[\] { 
.foreach_item(PrimaryIdentifier.Attributes)
%.T:Code%
.next(&quot;, &quot;)
 });
            if (e == null)
               return 0;
\n
.foreach_item(Attributes)
.if(%PrimaryIdentifier%==false)
            // %.T:Code%
            db.SetFirstChild(e,&quot;%.T:Code%&quot;,%.T:Code%.ToString());
.endif
.next(\n)

.set_value(thisCode,%.T:Code%)
.foreach_item(Associations,\n)
   .set_object(assName,null)
   .set_object(assClass,null)
   .set_value(classCode,null)
   .if(%thisCode%==%ClassA.Code%) and (%RoleBMultiple%==false)
      .set_value(assName,%.FUT:RoleAName%)
      .set_value(classCode,%ClassB.Code%)
   .elsif(%thisCode%==%ClassB.Code%) and (%RoleAMultiple%==false)
      .set_value(assName,%.FUT:RoleBName%)
      .set_value(classCode,%ClassA.Code%)
   .endif
   .if(%classCode%!=null)
      .foreach_item(Model.Classes)
            .if(%Code%==%classCode%)
            .set_object(assClass,this)
            .endif
      .next
   .endif
   .if(%assClass%!=null) and (%assName%!=null)
            // Association %assClass.Code%\n
            .set_value(classCode,%assClass.Code%)
            if(%assName% != null){\n
.foreach_item(Model.Classes)
.if(%Code%==%classCode%)
.foreach_item(PrimaryIdentifier.Attributes)
               db.SetFirstChild(e,&quot;%.T:Code%&quot;,%assName%.%.T:Code%.ToString());\n
.next(\n)
.endif
.next
            }
   .endif
.next(\n)
\n
            return 1;
\n        }
\n

.set_object(thisClass,this)
.set_value(thisCode,%.T:Code%)
.foreach_item(Associations)
   .set_object(assClass,null)
   .set_value(classCode,null)
   .if(%thisCode%==%ClassA.Code%) and (%RoleBMultiple%==false)
      .set_value(assName,%.FUT:RoleAName%)
      .set_value(classCode,%ClassB.Code%)
   .elsif(%thisCode%==%ClassB.Code%) and (%RoleAMultiple%==false)
      .set_value(assName,%.FUT:RoleBName%)
      .set_value(classCode,%ClassA.Code%)
   .endif
   .if(%classCode%!=null)
      .foreach_item(Model.Classes)
            .if(%Code%==%classCode%)
            .set_object(assClass,this)
            .endif
      .next
   .endif
   .if(%assClass%!=null)
\n        // %ClassA.Code%(%RoleAMinMultiplicity%,%RoleAMaxMultiplicity%) &lt;-&gt; (%RoleBMinMultiplicity%,%RoleBMaxMultiplicity%)%ClassB.Code%
        public %assClass.Code% Load%assName%()
        {
            XmlFactory db = Factory as XmlFactory;
            XmlElement reader = db.FindElement(&quot;%thisClass.Code%&quot;, new string\[\] {
.foreach_item(thisClass.Attributes)
.if(%PrimaryIdentifier%==true)
&quot;%.T:Code%&quot;
.endif
.next(&quot;, &quot;)
 }, new object\[\] { 
.foreach_item(thisClass.Attributes)
.if(%PrimaryIdentifier%==true)
%.T:Code%
.endif
.next(&quot;, &quot;)
 });
            %assClass.Code%XmlSet %.L:assName% = new %assClass.Code%XmlSet();
         
             // obtient l&#39;identifiant
            .foreach_item(assClass.PrimaryIdentifier.Attributes,\n)
            %DataType% %.T:Code% = new %DataType%();
            .next(\n)
\n
            .foreach_item(assClass.PrimaryIdentifier.Attributes,\n)
             XmlElement e = db.GetFirstChild(reader, &quot;%.T:Code%&quot;);
             if (e == null)
                 return null;\n
            .if(%DataType%==&quot;string&quot;)
             %.T:Code% = e.Value;
            .else
             %.T:Code% = %DataType%.Parse(e.Value);
            .endif(\n)
            .next
             
             // obtient l&#39;objet de reference
             %assClass.Code%XmlSet _entity = (from p in db.References.OfType&lt;%assClass.Code%XmlSet&gt;() where 
.foreach_item(assClass.PrimaryIdentifier.Attributes)
p.%Code% == %Code%
.next(&quot;&amp;&amp; &quot;)
 select p).FirstOrDefault();

             if ( _entity == null)
             {
                _entity = new %assClass.Code%XmlSet();
                _entity.Factory = db;
.foreach_item(assClass.PrimaryIdentifier.Attributes,\n)
                _entity.%Code% = %Code%;
.next(\n)
\n                _entity = db.GetReference(_entity) as %assClass.Code%XmlSet;//mise en cache
             }
               
             // Recharge les données depuis la BDD
             _entity.Refresh();
         
            return %.FU:assName% = %.L:assName%;
        }
   .endif(\n)
.next


.set_object(thisClass,this)
.set_value(thisCode,%.T:Code%)
.foreach_item(Associations)
   .set_object(assClass,null)
   .set_value(classCode,null)
   .if(%thisCode%==%ClassA.Code%) and (%RoleBMultiple%==true)
      .set_value(assName,%.FUT:RoleAName%)
      .set_value(classCode,%ClassB.Code%)
   .elsif(%thisCode%==%ClassB.Code%) and (%RoleAMultiple%==true)
      .set_value(assName,%.FUT:RoleBName%)
      .set_value(classCode,%ClassA.Code%)
   .endif
   .if(%RoleAMultiple%==true) and (%RoleBMultiple%==true)
   .set_value(assTable,%.FUT:Code%)
   .else
   .set_value(assTable,%classCode%)
   .endif
   .if(%classCode%!=null)
      .foreach_item(Model.Classes)
            .if(%Code%==%classCode%)
            .set_object(assClass,this)
            .endif
      .next
   .endif
   
   .if(%assClass%!=null)
\n        // %ClassA.Code%(%RoleAMinMultiplicity%,%RoleAMaxMultiplicity%) &lt;-&gt; (%RoleBMinMultiplicity%,%RoleBMaxMultiplicity%)%ClassB.Code%
        public Collection&lt;%assClass.Code%&gt; Load%assName%()
        {
            XmlFactory db = Factory as XmlFactory;
            XmlElement\[\] %.L:assName%Elements = db.FindElements(&quot;%assClass.Code%&quot;, new string\[\] {
.foreach_item(thisClass.Attributes)
.if(%PrimaryIdentifier%==true)
&quot;%.T:Code%&quot;
.endif
.next(&quot;, &quot;)
 }, new object\[\] { 
.foreach_item(thisClass.Attributes)
.if(%PrimaryIdentifier%==true)
%.T:Code%
.endif
.next(&quot;, &quot;)
 });
            Collection&lt;%assClass.Code%&gt; %.L:assName% = new Collection&lt;%assClass.Code%&gt;();
            
            
            foreach (var reader in %.L:assName%Elements)
            {
                // obtient l&#39;identifiant
               .foreach_item(assClass.PrimaryIdentifier.Attributes,\n)
               %DataType% %.T:Code% = new %DataType%();
               .next(\n)
 \n
               .foreach_item(assClass.PrimaryIdentifier.Attributes,\n)
                XmlElement e = db.GetFirstChild(reader, &quot;%.T:Code%&quot;);
                if (e == null)
                    continue;\n
               .if(%DataType%==&quot;string&quot;)
                %.T:Code% = e.Value;
               .else
                %.T:Code% = %DataType%.Parse(e.Value);
               .endif(\n)
               .next
                
                // obtient l&#39;objet de reference
                %assClass.Code%XmlSet _entity = (from p in db.References.OfType&lt;%assClass.Code%XmlSet&gt;() where 
.foreach_item(assClass.PrimaryIdentifier.Attributes)
p.%Code% == %Code%
.next(&quot;&amp;&amp; &quot;)
 select p).FirstOrDefault();
 
                if ( _entity == null)
                {
                   _entity = new %assClass.Code%XmlSet();
                   _entity.Factory = db;
.foreach_item(assClass.PrimaryIdentifier.Attributes,\n)
                   _entity.%Code% = %Code%;
.next(\n)
\n                   _entity = db.GetReference(_entity) as %assClass.Code%XmlSet;//mise en cache
                }
                  
                // Recharge les données depuis la BDD
                _entity.Refresh();
            
                // Ajoute la reference à la collection
                %.L:assName%.Add(_entity);
            }

            return %.FU:assName% = %.L:assName%;
        }
   .endif(\n)
.next

        public void PickIdentity(object _reader)
        {
            XmlNode reader = _reader as XmlNode;
            foreach (var node in reader.ChildNodes.OfType&lt;XmlElement&gt;())
            {\n
            .foreach_item(PrimaryIdentifier.Attributes)
                if (node.LocalName == &quot;%.T:Code%&quot;)\n
               .if(%DataType%==&quot;string&quot;)
                    %.T:Code% = node.Value;
               .else
                    %.T:Code% = %DataType%.Parse(node.Value);
               .endif(\n)
            .next(\n)
            }
\n        }
       
        public void PickProperties(object _reader)
        {
            XmlNode reader = _reader as XmlNode;
            foreach (var node in reader.ChildNodes.OfType&lt;XmlElement&gt;())
            {\n
            .foreach_item(Attributes)
            .if(%PrimaryIdentifier%==false)
                if (node.LocalName == &quot;%.T:Code%&quot;)\n
               .if(%DataType%==&quot;string&quot;)
                    %.T:Code% = node.Value;
               .else
                    %.T:Code% = %DataType%.Parse(node.Value);
               .endif(\n)
            .endif(\n)
            .next(\n)
            }
\n        }
       
    }
}</a:TemplateTargetItem.Value>
<a:CreationDate>1436513899</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437755959</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
<o:TemplateTargetItem Id="o34">
<a:ObjectID>AEEDEFB1-A02E-4889-B49B-9D26563FE819</a:ObjectID>
<a:Name>xml_header</a:Name>
<a:TemplateTargetItem.Value>/*
   Définition XML de l&#39;entité %Code%

   !!Attention!!
   Ce code source est généré automatiquement, toutes modifications seront perdues
   
*/

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Xml;
using System.Linq;
using System.Text;
using Lib;
%serial_type%
</a:TemplateTargetItem.Value>
<a:CreationDate>1436513899</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437754616</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
<o:TypedCategoryTargetItem Id="o35">
<a:TypePublicName>GeneratedFileTargetItem</a:TypePublicName>
<a:ObjectID>A1E34A85-0559-4A03-B1DC-4C7535570CCF</a:ObjectID>
<a:Name>Generated Files</a:Name>
<a:CreationDate>1402490943</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437576570</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:GeneratedFileTargetItem Id="o36">
<a:ObjectID>C7B90500-F3A3-4824-874C-0512E16DC4DB</a:ObjectID>
<a:Name>Validation</a:Name>
<a:TemplateTargetItem.Value>%validation_header%

%validation_definition%</a:TemplateTargetItem.Value>
<a:CreationDate>1402490943</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437753625</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:FileType>.cs</a:FileType>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:Filename>%ActiveModel.namespace%\Validate\%Code%.cs</a:Filename>
<a:GeneratedFileTargetItem.Encoding>UTF8Marked</a:GeneratedFileTargetItem.Encoding>
</o:GeneratedFileTargetItem>
<o:GeneratedFileTargetItem Id="o37">
<a:ObjectID>2CB92DDA-213B-4C50-9666-D03F3CC4996A</a:ObjectID>
<a:Name>Entity</a:Name>
<a:TemplateTargetItem.Value>%entity_header%

%entity_definition%
</a:TemplateTargetItem.Value>
<a:CreationDate>1435848790</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437753625</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:FileType>.cs</a:FileType>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:Filename>%ActiveModel.namespace%\Entity\%Code%.cs</a:Filename>
<a:GeneratedFileTargetItem.Encoding>UTF8Marked</a:GeneratedFileTargetItem.Encoding>
</o:GeneratedFileTargetItem>
<o:GeneratedFileTargetItem Id="o38">
<a:ObjectID>A37CB682-44D2-4567-8AB2-4B0E91D8FEE7</a:ObjectID>
<a:Name>Database</a:Name>
<a:TemplateTargetItem.Value>.if(%ActiveModel.useDatabaseFactory%)
%database_header%

%database_definition%
.endif</a:TemplateTargetItem.Value>
<a:CreationDate>1435903934</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437754358</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:FileType>.cs</a:FileType>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:Filename>%ActiveModel.namespace%\Database\%Code%.cs</a:Filename>
<a:GeneratedFileTargetItem.Encoding>UTF8Marked</a:GeneratedFileTargetItem.Encoding>
</o:GeneratedFileTargetItem>
<o:GeneratedFileTargetItem Id="o39">
<a:ObjectID>356935B1-DA09-40D3-B58B-52285B9CD068</a:ObjectID>
<a:Name>Xml</a:Name>
<a:TemplateTargetItem.Value>.if(%ActiveModel.useXmlFactory%)
%xml_header%

%xml_definition%
.endif</a:TemplateTargetItem.Value>
<a:CreationDate>1436513899</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437754358</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:FileType>.cs</a:FileType>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:Filename>%ActiveModel.namespace%\Xml\%Code%.cs</a:Filename>
<a:GeneratedFileTargetItem.Encoding>UTF8Marked</a:GeneratedFileTargetItem.Encoding>
</o:GeneratedFileTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
</c:Categories>
</o:MetaClassTargetItem>
<o:MetaClassTargetItem Id="o40">
<a:ObjectID>3792FBD8-1717-4798-B595-ED080F5B3A22</a:ObjectID>
<a:Name>DataFormat</a:Name>
<a:CreationDate>1402491993</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1402492201</a:ModificationDate>
<a:Modifier>tauguey</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:EnableSelectionGeneration>1</a:EnableSelectionGeneration>
<c:Categories>
<o:TypedCategoryTargetItem Id="o41">
<a:TypePublicName>GeneratedFileTargetItem</a:TypePublicName>
<a:ObjectID>41A91651-5C7E-45E3-AEE6-D355EC5B89B5</a:ObjectID>
<a:Name>Generated Files</a:Name>
<a:CreationDate>1402491993</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1402492162</a:ModificationDate>
<a:Modifier>tauguey</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:GeneratedFileTargetItem Id="o42">
<a:ObjectID>A6740C1C-D179-45ED-8781-6CE5083DE758</a:ObjectID>
<a:Name>Formats</a:Name>
<a:TemplateTargetItem.Value>%header%

%definition%</a:TemplateTargetItem.Value>
<a:CreationDate>1402491993</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437754691</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:FileType>.cs</a:FileType>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:Filename>%ActiveModel.namespace%\Format\%Code%.cs</a:Filename>
<a:GeneratedFileTargetItem.Encoding>UTF8Marked</a:GeneratedFileTargetItem.Encoding>
</o:GeneratedFileTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
<o:TypedCategoryTargetItem Id="o43">
<a:TypePublicName>TemplateTargetItem</a:TypePublicName>
<a:ObjectID>7E847E74-93F3-456E-A9CB-39F76B961D89</a:ObjectID>
<a:Name>Templates</a:Name>
<a:CreationDate>1402492162</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437753625</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TemplateTargetItem Id="o44">
<a:ObjectID>B6757CEA-8EF0-466C-91DC-33A66BEE5EB2</a:ObjectID>
<a:Name>definition</a:Name>
<a:TemplateTargetItem.Value>namespace %ActiveModel.namespace%.Format
{
      public static class %Code%
      {
            /// &lt;summary&gt;
            /// %Comment%
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;str&quot;&gt;Chaine à valider&lt;/param&gt;
            /// &lt;returns&gt;True si le champ est valide, sinon False&lt;/returns&gt;
            public static bool Validate(string str, ref string msg)
            {
               System.Text.RegularExpressions.Regex myRegex = new Regex(@&quot;%Expression%&quot;);
               if (!myRegex.IsMatch(str))
               {
                   msg = &quot;%Stereotype%&quot;;
                   //Result.last = new Result().Failed(&quot;%Stereotype%&quot;);
                   return false;
               }
               msg = String.Empty;
               return true;
            }
      }
}</a:TemplateTargetItem.Value>
<a:CreationDate>1402492162</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437754691</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
<o:TemplateTargetItem Id="o45">
<a:ObjectID>C0BF3F94-88F0-4E2F-BBB7-DDB56F48AE75</a:ObjectID>
<a:Name>header</a:Name>
<a:TemplateTargetItem.Value>/*
   Format de données %Code%

   !!Attention!!
   Ce code source est généré automatiquement depuis PowerDesigner, toutes modifications risques d&#39;être perdues
   
*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.ComponentModel;
using System.Globalization;
using System.Reflection;
using System.Text.RegularExpressions;</a:TemplateTargetItem.Value>
<a:CreationDate>1402499184</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437754691</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
</c:Categories>
</o:MetaClassTargetItem>
<o:MetaClassTargetItem Id="o46">
<a:ObjectID>75484668-386A-48AD-94E3-05DE52CABB2F</a:ObjectID>
<a:Name>Domain</a:Name>
<a:CreationDate>1402494694</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1402494942</a:ModificationDate>
<a:Modifier>tauguey</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:EnableSelectionGeneration>1</a:EnableSelectionGeneration>
<c:Categories>
<o:TypedCategoryTargetItem Id="o47">
<a:TypePublicName>GeneratedFileTargetItem</a:TypePublicName>
<a:ObjectID>619988DD-953F-45B0-945D-9DED63BC62CB</a:ObjectID>
<a:Name>Generated Files</a:Name>
<a:CreationDate>1402494694</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1402494942</a:ModificationDate>
<a:Modifier>tauguey</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:GeneratedFileTargetItem Id="o48">
<a:ObjectID>CB7B7258-B674-4494-8D1A-FF0088B8B6FE</a:ObjectID>
<a:Name>Domain</a:Name>
<a:TemplateTargetItem.Value>%header%

%definition%</a:TemplateTargetItem.Value>
<a:CreationDate>1402494694</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437754691</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:FileType>.cs</a:FileType>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:Filename>%ActiveModel.namespace%\Domain\%Code%.cs</a:Filename>
<a:GeneratedFileTargetItem.Encoding>UTF8Marked</a:GeneratedFileTargetItem.Encoding>
</o:GeneratedFileTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
<o:TypedCategoryTargetItem Id="o49">
<a:TypePublicName>TemplateTargetItem</a:TypePublicName>
<a:ObjectID>D75180F5-E75E-43AD-B291-37F6EF94CB59</a:ObjectID>
<a:Name>Templates</a:Name>
<a:CreationDate>1402494694</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437753625</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TemplateTargetItem Id="o50">
<a:ObjectID>9BDD1614-37E6-49F8-B57E-ECBD9F028CD6</a:ObjectID>
<a:Name>definition</a:Name>
<a:TemplateTargetItem.Value>namespace %ActiveModel.namespace%.Domain
{
    public static class %Code%
    {
      public static string\[\] Keys = {
.set_value(first,true,new)
.foreach_line (%ListOfValues%)
.set_value(isname,true,new)
.foreach_part (%CurrentLine%,&#39;\t&#39;)
.if(%isname%==true)
.set_value(isname,false,update)
.if(%first%==true)
.set_value(first,false,update)
.else
, 
.endif
&quot;%CurrentPart%&quot;
.endif
.next
.next
 };
      public static string\[\] Labels = { 
.set_value(first,true,new)
.foreach_line (%ListOfValues%)
.set_value(isname,true,new)
.foreach_part (%CurrentLine%,&#39;\t&#39;)
.if(%isname%==true)
.set_value(isname,false,update)
.else
.if(%first%==true)
.set_value(first,false,update)
.else
, 
.endif
&quot;%CurrentPart%&quot;
.endif
.next
.next
 };
    
      //-----------------------------------------------------------------------------------------
      // Proprietes
      //-----------------------------------------------------------------------------------------
      #region Properties\n

.foreach_line (%ListOfValues%)
.set_value(isname,true,new)
.foreach_part (%CurrentLine%,&#39;\t&#39;)
.if(%isname%==true)
.set_value(isname,false,update)
      public static string %CurrentPart% { get{ return &quot;%CurrentPart%&quot;; } }
.endif
.next
.next(\n)
\n
      #endregion //Properties
    }
}
</a:TemplateTargetItem.Value>
<a:CreationDate>1402494694</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1437754691</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
<o:TemplateTargetItem Id="o51">
<a:ObjectID>3E972377-EE7C-4D52-8F8D-7DCA6CFFD978</a:ObjectID>
<a:Name>header</a:Name>
<a:TemplateTargetItem.Value>/*
   Domaine de valeurs %Code%

   !!Attention!!
   Ce code source est généré automatiquement depuis PowerDesigner, toutes modifications risques d&#39;être perdues
   
*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Globalization;
</a:TemplateTargetItem.Value>
<a:CreationDate>1402499184</a:CreationDate>
<a:Creator>tauguey</a:Creator>
<a:ModificationDate>1435856862</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
</c:Categories>
</o:MetaClassTargetItem>
<o:MetaClassTargetItem Id="o52">
<a:ObjectID>C9C4F43F-67ED-4B06-8FF6-FF09D0F224AA</a:ObjectID>
<a:Name>Model</a:Name>
<a:CreationDate>1437508568</a:CreationDate>
<a:Creator>developpement</a:Creator>
<a:ModificationDate>1437508785</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:EnableSelectionGeneration>1</a:EnableSelectionGeneration>
<c:Categories>
<o:TypedCategoryTargetItem Id="o53">
<a:TypePublicName>GeneratedFileTargetItem</a:TypePublicName>
<a:ObjectID>EE583485-1D06-4372-9D9E-A6D61D33DBB9</a:ObjectID>
<a:Name>Generated Files</a:Name>
<a:CreationDate>1437508568</a:CreationDate>
<a:Creator>developpement</a:Creator>
<a:ModificationDate>1437508785</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:GeneratedFileTargetItem Id="o54">
<a:ObjectID>A7A10200-28E2-4A22-9AA1-47F85826D728</a:ObjectID>
<a:Name>Model</a:Name>
<a:TemplateTargetItem.Value>%model_header%

%model_definition%</a:TemplateTargetItem.Value>
<a:CreationDate>1437508568</a:CreationDate>
<a:Creator>developpement</a:Creator>
<a:ModificationDate>1437754728</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:FileType>.cs</a:FileType>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:Filename>%namespace%\Model.cs</a:Filename>
<a:GeneratedFileTargetItem.Encoding>UTF8Marked</a:GeneratedFileTargetItem.Encoding>
</o:GeneratedFileTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
<o:TypedCategoryTargetItem Id="o55">
<a:TypePublicName>TemplateTargetItem</a:TypePublicName>
<a:ObjectID>C0914AA9-14BB-49F6-95CB-72821038CA8C</a:ObjectID>
<a:Name>Templates</a:Name>
<a:CreationDate>1437508568</a:CreationDate>
<a:Creator>developpement</a:Creator>
<a:ModificationDate>1437754728</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TemplateTargetItem Id="o56">
<a:ObjectID>AC1EE0BD-CC32-42A9-8294-68372BB821DB</a:ObjectID>
<a:Name>model_definition</a:Name>
<a:TemplateTargetItem.Value>namespace %namespace%
{
    public interface IModel
    {
        IEntityFactory Factory { get; }

.foreach_item(Classes)
        IEnumerable %Code% { get; }
.next(\n)

    }
\n
.if(%useDatabaseFactory%)
    public class SqlModel : IModel
    {
        public SqlModel(SqlFactory factory)
        {
            this.factory = factory;
        }
        public SqlFactory factory;
        public IEntityFactory Factory { get { return factory; } }

.foreach_item(Classes)
        public IEnumerable %Code% { get { return new Database.EntityFactory&lt;%Code%Set&gt;(factory); } }
.next(\n)

    }
.endif
\n
.if(%useXmlFactory%)
    public class XmlModel : IModel
    {
        public XmlModel(XmlFactory factory)
        {
            this.factory = factory;
        }
        public XmlFactory factory;
        public IEntityFactory Factory { get { return factory; } }

.foreach_item(Classes)
        public IEnumerable %Code% { get { return new XmlFactory.EntityFactory&lt;%Code%XmlSet&gt;(factory); } }
.next(\n)

    }
.endif
}
</a:TemplateTargetItem.Value>
<a:CreationDate>1437508568</a:CreationDate>
<a:Creator>developpement</a:Creator>
<a:ModificationDate>1437756132</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
<o:TemplateTargetItem Id="o57">
<a:ObjectID>AC414C13-E01F-43D1-801C-7171149945C6</a:ObjectID>
<a:Name>namespace</a:Name>
<a:TemplateTargetItem.Value>Model</a:TemplateTargetItem.Value>
<a:CreationDate>1437508785</a:CreationDate>
<a:Creator>developpement</a:Creator>
<a:ModificationDate>1437509887</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
<o:TemplateTargetItem Id="o58">
<a:ObjectID>F44CF79B-5CF1-4761-A4BF-0CD1BA8BD39B</a:ObjectID>
<a:Name>useDatabaseFactory</a:Name>
<a:TemplateTargetItem.Value>true</a:TemplateTargetItem.Value>
<a:CreationDate>1437752742</a:CreationDate>
<a:Creator>developpement</a:Creator>
<a:ModificationDate>1437754199</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:Comment>Exporte le model de données pour SQL</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
<o:TemplateTargetItem Id="o59">
<a:ObjectID>A735C68D-2F5A-4BD2-BEB1-740838E789C6</a:ObjectID>
<a:Name>useXmlFactory</a:Name>
<a:TemplateTargetItem.Value>true</a:TemplateTargetItem.Value>
<a:CreationDate>1437753656</a:CreationDate>
<a:Creator>developpement</a:Creator>
<a:ModificationDate>1437754829</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:Comment>Exporte le model de données pour XML</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
<o:TemplateTargetItem Id="o60">
<a:ObjectID>097975C5-F739-4664-B3FE-8A5A612D062D</a:ObjectID>
<a:Name>model_header</a:Name>
<a:TemplateTargetItem.Value>/*
   Implémentation du model de données

   !!Attention!!
   Ce code source est généré automatiquement depuis PowerDesigner, toutes modifications risques d&#39;être perdues
   
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Lib;
using %namespace%.Entity;

</a:TemplateTargetItem.Value>
<a:CreationDate>1437754691</a:CreationDate>
<a:Creator>developpement</a:Creator>
<a:ModificationDate>1437754758</a:ModificationDate>
<a:Modifier>developpement</a:Modifier>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
</c:Categories>
</o:MetaClassTargetItem>
</c:Categories>
</o:ProfileTargetItem>
</c:Categories>
</o:ObjectLanguage>

</DVTL>